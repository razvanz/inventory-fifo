extends:
  - eslint:recommended

env:
  node: true
  mocha: true
  browser: true
  es6: true

rules:

  strict:
    - 1
    - global

  # General
  comma-dangle:
    # Allow but do not force dangling commas. This equates to the least effort
    # required by the developer.
    - 2
    - never
  no-cond-assign:
    - 2
  no-console:
    # We may revisit this at a later point but the number of false
    # negatives this creates while developing is too annoying.
    - 1
  no-constant-condition:
    - 1
  no-dupe-args:
    - 2
  no-dupe-keys:
    - 2
  no-duplicate-case:
    - 1
  no-empty:
    - 2
  no-ex-assign:
    - 0
  no-extra-boolean-cast:
    - 2
  no-extra-parens:
    - 0
  no-extra-semi:
    - 2
  no-func-assign:
    - 2
  no-inner-declarations:
    - 2
    - both
  no-negated-in-lhs:
    - 2
  no-obj-calls:
    - 2
  no-sparse-arrays:
    - 2
  no-unexpected-multiline:
    - 2
  no-unreachable:
    - 2
  use-isnan:
    - 2
  valid-typeof:
    - 2
  valid-jsdoc:
    - 2

  # Best practices
  accessor-pairs:
    - 1
    - getWithoutSet: false
      setWithoutGet: false
  default-case:
    - 2
  dot-location:
    - 1
    - property
  dot-notation:
    - 1
  eqeqeq:
    - 1
    - smart
  curly:
    - 1
    - multi
    - consistent
  no-else-return:
    - 2
  no-implicit-coercion:
    - 2
  no-multi-spaces:
    - 1
  no-process-env:
    - 0
  no-return-assign:
    - 1
    - except-parens
  no-trailing-spaces:
    - 2
  no-throw-literal:
    - 2
  no-void:
    - 1
  radix:
    - 2
  vars-on-top:
    - 2
  yoda:
    - 1
    - never

  # Variables
  init-declarations:
    - 2
    - always
  no-catch-shadow:
    - 2
  no-delete-var:
    - 2
  no-label-var:
    - 2
  no-shadow-restricted-names:
    - 1
  no-shadow:
    - 2
  no-undef-init:
    - 2
  no-undef:
    - 1
  no-undefined:
    - 0
  no-unused-vars:
    - 1

  # NodeJS
  handle-callback-err:
    - 2
  no-mixed-requires:
    - 1
    - grouping: true
  no-new-require:
    - 2
  no-path-concat:
    - 1
  no-process-exit:
    - 0
  no-sync:
    - 2

  # Style
  array-bracket-spacing:
   - 1
   - never
  block-spacing:
   - 2
   - always
  brace-style:
    - 2
    - 1tbs
    - allowSingleLine: true
  camelcase:
    - 0
    - properties: never
  comma-spacing:
    - 1
    - before: false
      after: true
  comma-style:
    - 2
    - last
  computed-property-spacing:
    - 1
    - never
  consistent-this:
    - 2
    - self
  eol-last:
    - 2
    - unix
  id-length:
    - 2
    - min: 1
      max: 50
  indent:
    - 2
    - 2
    - SwitchCase: 1
  key-spacing:
    - 2
    - beforeColon: false
      afterColon: true
  linebreak-style:
    - 2
  max-depth:
    - 2
    - 4
  max-len:
    - 2
    - 80
  max-nested-callbacks:
    - 2
    - 5
  max-params:
    - 2
    - 6
  new-cap:
    - 2
    - newIsCap: true
      capIsNew: false
  new-parens:
    - 0
  no-lonely-if:
    - 2
  no-mixed-spaces-and-tabs:
    - 2
  no-multiple-empty-lines:
    - 1
  no-unneeded-ternary:
    - 1
  object-curly-spacing:
    - 1
    - never
  one-var:
    - 1
    - uninitialized: never
      initialized: never
  operator-assignment:
    - 1
    - always
  quote-props:
    - 1
    - consistent-as-needed
  quotes:
    - 1
    - single
  require-jsdoc:
    - 0
  semi:
    - 2
    - always
  sort-vars:
    - 1
  space-before-blocks:
   - 1
   - always
  space-before-function-paren:
    - 1
    - anonymous: always
      named: never
  space-in-parens:
    - 1
    - never
  space-infix-ops:
    - 2

  # ES6
  arrow-parens:
    - 1
    - always
  arrow-spacing:
    - 1
    - before: true
      after: true
  constructor-super:
    - 2
  no-class-assign:
    - 2
  no-const-assign:
    - 2
  no-var:
    - 1
  object-shorthand:
    - 0
    - properties
  prefer-arrow-callback:
    - 1
  prefer-const:
    - 1

  prefer-spread:
    # Not supported in node < v5
    - 0
  prefer-template:
    - 2
